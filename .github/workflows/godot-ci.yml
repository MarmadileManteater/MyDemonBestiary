name: "godot-ci export"
on: push

env:
  GODOT_VERSION: 3.5.1
  EXPORT_NAME: test-project
  PROJECT_PATH: ./
  
jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:mono-3.5.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
          
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          cd $PROJECT_PATH
          godot -v --export "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:mono-3.5.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          cd $PROJECT_PATH
          godot -v --export "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:mono-3.5.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
      - name: Web Build
        run: |
          mkdir -v -p build/web
          cd $PROJECT_PATH
          godot -v --export "HTML5" ../build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: web
          path: build/web

  export-android:
    name: Android Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:mono-3.5.1
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
          
      - name: ðŸš§ Setup Android SDK Tools
        uses: android-actions/setup-android@v2.0.9
        
      - name: ðŸ¦´ Fetch keystore from secrets
        run: |
         while read -r line;
         do
           echo "${line}" >> godot.keystore.asc
         done <<< '${{ secrets.DEBUG_KEYSTORE }}'
         gpg -d --passphrase '${{ secrets.DEBUG_KEYSTORE_PASSWORD }}' --batch godot.keystore.asc >> godot.keystore
      - name: Reference keystore in export_presets.cfg
        run: |
          sed -i 's/keystore/debug=""/keystore/debug="$(pwd)/godot.keytore"/g' export_presets.cfg
          sed -i 's/keystore/debug_user=""/keystore/debug_user="${{ secrets.DEBUG_KEYSTORE_USER }}"/g' export_presets.cfg
          sed -i 's/keystore/debug_password=""/keystore/debug_password="${{ secrets.DEBUG_KEYSTORE_PASSWORD }}"/g' export_presets.cfg
          
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
          
      - name: Android Build
        run: |
          mkdir -v -p build/mac
          cd $PROJECT_PATH
          godot -v --export "Android" ../build/android/$EXPORT_NAME.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: mac
          path: build/android
