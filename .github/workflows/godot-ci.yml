name: "godot-ci export"
on: push

env:
  GODOT_VERSION: 3.5.1
  EXPORT_NAME: my-demon-bestiary
  PROJECT_PATH: ./
  
jobs:
  build:
    name: Export
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: üç∑ Setup WINE and rcedit 
        run: |
          dpkg --add-architecture i386 && apt-get update && apt-get install -y wine-stable && apt-get install -y wine32
          chown root:root -R ~
          wget https://github.com/electron/rcedit/releases/download/v1.1.1/rcedit-x64.exe
          mkdir -v -p ~/.local/share/rcedit
          mv rcedit-x64.exe ~/.local/share/rcedit
          godot -q
          echo 'export/windows/wine = "/usr/bin/wine"' >> ~/.config/godot/editor_settings-3.tres
          echo 'export/windows/rcedit = "/github/home/.local/share/rcedit/rcedit-x64.exe"' >> ~/.config/godot/editor_settings-3.tres
          
      - name: ü¶¥ Fetch keystore from secrets
        run: |
         while read -r line;
         do
           echo "${line}" >> godot.keystore.asc
         done <<< '${{ secrets.DEBUG_KEYSTORE }}'
         gpg -d --passphrase '${{ secrets.DEBUG_KEYSTORE_PASSWORD }}' --batch godot.keystore.asc >> godot.keystore
      
      - name: Reference keystore in export_presets.cfg
        run: |
          sed -i 's@keystore/debug=""@keystore/debug="'$(pwd)'/godot.keystore"@g' export_presets.cfg
          sed -i 's@keystore/debug_user=""@keystore/debug_user="${{ secrets.DEBUG_KEYSTORE_USER }}"@g' export_presets.cfg
          sed -i 's@keystore/debug_password=""@keystore/debug_password="${{ secrets.DEBUG_KEYSTORE_PASSWORD }}"@g' export_presets.cfg
          sed -i 's@keystore/release=""@keystore/release="'$(pwd)'/godot.keystore"@g' export_presets.cfg
          sed -i 's@keystore/release_user=""@keystore/release_user="${{ secrets.DEBUG_KEYSTORE_USER }}"@g' export_presets.cfg
          sed -i 's@keystore/release_password=""@keystore/release_password="${{ secrets.DEBUG_KEYSTORE_PASSWORD }}"@g' export_presets.cfg
          cat export_presets.cfg
          
      - name: Get tag from version
        id: tag_version
        run: |
            echo "TAG_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: üì§ Export game
        id: export
        # Use latest version (see releases for all versions)
        uses: firebelley/godot-export@v4.7.0
        with:
          # Defining all the required inputs
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/3.5.1-stable/Godot_v3.5.1-stable_mono_linux_headless_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/3.5.1-stable/Godot_v3.5.1-stable_mono_export_templates.tpz
          relative_project_path: ./
          archive_output: true
          export_debug: true
          
      - name: ü§ê Unzip build artifacts
        run: |
          mkdir ./artifacts
          unzip -qq ${{ steps.export.outputs.archive_directory }}/HTML5.zip -d ./artifacts/HTML5
          unzip -qq '${{ steps.export.outputs.archive_directory }}/Windows Desktop.zip' -d ./artifacts/Windows/
          unzip -qq ${{ steps.export.outputs.archive_directory }}/Android.zip -d ./artifacts/Android/
          
      - name: ‚¨Ü Upload HTML5 Artifact
        uses: actions/upload-artifact@v1
        with:
          name: HTML5
          path: ./artifacts/HTML5
          
      - name: ‚¨Ü Upload Windows Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Windows
          path: ./artifacts/Windows
          
      - name: ‚¨Ü Upload Android Artifact
        uses: actions/upload-artifact@v1
        with:
          name: Android
          path: ./artifacts/Android/Digital-Gardening.apk

